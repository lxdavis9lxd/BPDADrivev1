<%- include('layout', { title, user, error, success, body: `
<div class="row mb-4">
    <div class="col-md-8">
        <h2><i class="bi bi-file-earmark-text"></i> ${file.name}</h2>
    </div>
    <div class="col-md-4 text-md-end">
        <a href="/explorer" class="btn btn-outline-secondary me-2">
            <i class="bi bi-arrow-left"></i> Back to Explorer
        </a>
        <button id="saveFileBtn" class="btn btn-primary">
            <i class="bi bi-save"></i> Save
        </button>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Editor</h5>
            </div>
            <div class="card-body">
                <textarea id="fileContent" class="form-control" rows="20" style="font-family: monospace;">${file.content || ''}</textarea>
            </div>
            <div class="card-footer text-muted small">
                <div class="row">
                    <div class="col-6">
                        Created: ${file.formattedCreatedAt}
                    </div>
                    <div class="col-6 text-end">
                        Modified: ${file.formattedModifiedAt}
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">Preview</h5>
            </div>
            <div class="card-body">
                <div id="previewContent" class="markdown-preview">
                    ${preview}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const fileContent = document.getElementById('fileContent');
    const previewContent = document.getElementById('previewContent');
    const saveFileBtn = document.getElementById('saveFileBtn');
    let saveTimeout;
    
    // Function to update preview
    const updatePreview = () => {
        fetch('/editor/preview', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ content: fileContent.value })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                previewContent.innerHTML = data.preview;
            }
        })
        .catch(error => {
            console.error('Preview error:', error);
        });
    };
    
    // Function to save file
    const saveFile = () => {
        fetch('/editor/${file.id}/save', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ content: fileContent.value })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Show save indicator
                saveFileBtn.classList.remove('btn-primary');
                saveFileBtn.classList.add('btn-success');
                saveFileBtn.innerHTML = '<i class="bi bi-check-circle"></i> Saved';
                
                // Reset button after 2 seconds
                setTimeout(() => {
                    saveFileBtn.classList.remove('btn-success');
                    saveFileBtn.classList.add('btn-primary');
                    saveFileBtn.innerHTML = '<i class="bi bi-save"></i> Save';
                }, 2000);
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('Save error:', error);
            alert('Failed to save file');
        });
    };
    
    // Update preview when content changes
    fileContent.addEventListener('input', () => {
        // Update preview immediately
        updatePreview();
        
        // Auto-save after 3 seconds of inactivity
        clearTimeout(saveTimeout);
        saveTimeout = setTimeout(() => {
            saveFile();
        }, 3000);
    });
    
    // Save button click handler
    saveFileBtn.addEventListener('click', saveFile);
    
    // Initial preview update
    updatePreview();
});
</script>

<style>
.markdown-preview {
    min-height: 500px;
    max-height: 500px;
    overflow-y: auto;
}

.markdown-preview img {
    max-width: 100%;
}

.markdown-preview table {
    border-collapse: collapse;
    width: 100%;
}

.markdown-preview table, .markdown-preview th, .markdown-preview td {
    border: 1px solid #ddd;
    padding: 8px;
}
</style>
` }) %>
